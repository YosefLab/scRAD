% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/pamkd.R
\name{pamkd}
\alias{pamkd}
\title{Partitioning around the medoids with PCA dimension reduction}
\usage{
pamkd(x, maxk = min(5, min(dim(x)) - 1), maxd = min(5, min(dim(x)) - 1),
  to_log = FALSE, pca_center = TRUE, pca_scale = TRUE, verbose = FALSE)
}
\arguments{
\item{x}{a numeric or complex matrix (or data frame) which provides the data
for the principal components analysis.}

\item{maxk}{numeric. The maximum number of clusters to be passed to 
\code{\link[fpc]{pamk}}}

\item{maxd}{numeric. The maximum index of prinicipal components, \code{d}, 
to be inluded in the distance metric.}

\item{to_log}{logical. If TRUE (default FALSE), apply 
\code{\link[base]{log1p}} transformation prior to PCA (via 
\code{\link[rARPACK]{svds}}).}

\item{pca_center}{logical. If TRUE (default), apply row-centering prior to 
\code{\link[rARPACK]{svds}}.}

\item{pca_scale}{logical. If TRUE (default), apply row-scaling prior to 
\code{\link[rARPACK]{svds}}.}

\item{verbose}{logical. If TRUE (default FALSE), print informative messages.}
}
\value{
a list with the following elements: \itemize{ \item{pamobject}{ The 
  output of the optimal run of the \code{\link[cluster]{pam}}-function.} 
  \item{nc}{ the optimal number of clusters.} \item{nd}{ the optimal number
  of principal components.} \item{Y}{ dimension reduced data with optimal 
  dimension.} }
}
\description{
This calls the function \code{\link[fpc]{pamk}} to perform a partitioning 
around medoids clustering with the number of clusters estimated by optimum 
average silhouette width. Silhouette widths are computed on a Euclidean 
metric over the first \code{d} principal components, where \code{d} is 
varied over a range for each run. The optimal run is defined as the run with
maximal number of clusters over the range, using average silhouette width to
break ties.
}
\examples{
x <- cbind(matrix(rpois(10000, lambda = 3), ncol = 100),
           matrix(rpois(10000, lambda = 4), ncol = 100))
pamkd_out = pamkd(x, to_log = TRUE, pca_scale = FALSE)

# Show the objects in the 2D tsne representation
# tsne_obj = Rtsne(pamkd_out$Y, pca = FALSE) # Run TSNE
# plot(tsne_obj$Y,
#     col = pamkd_out$pamobject$clustering,
#     pch = 16)
}
